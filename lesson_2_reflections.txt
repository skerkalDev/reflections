What happens when you initialize a repository? Why do you need to do it?

	- it will create .git to store information of the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	- staging area store information of any changes you want to commit to the version
	system.
	- it allow you to control what you want to do to each commit before it really make
	changes to the version control system. eg: add, delete, modify.

How can you use the staging area to make sure you have one commit per logical
change?

	- use git add to add the changes I want to add to the staging area.
	- use git status to check if the commit is what I want.
	- use git commit to commit the changes to repository.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	- I can keep a different version control without affecting the master branch.

How do the diagrams help you visualize the branch structure?

	- So that I know where the branch are separating from, and what are those commit
	that are not included inside branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	- both changes are not merged back to the master branch.
	- so that we know what are the changes in each branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	-
